basePath: /
definitions:
  model.Task:
    properties:
      done:
        description: Статус выполнения задачи
        example: false
        type: boolean
      id:
        description: Уникальный идентификатор задачи
        example: 1
        type: integer
      title:
        description: Название задачи
        example: Купить молоко
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Это API для управления списком задач (To-Do).
  license: {}
  title: Todo API
  version: "1.0"
paths:
  /tasks:
    get:
      description: Возвращает список всех задач
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
      summary: Получить все задачи
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Создает новую задачу
      parameters:
      - description: Данные задачи
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.Task'
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Task'
            type: object
      summary: Создать задачу
      tags:
      - tasks
  /tasks/{id}:
    delete:
      description: Удаляет задачу по её ID
      parameters:
      - description: ID задачи
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Задача не найдена
          schema:
            type: string
      summary: Удалить задачу
      tags:
      - tasks
    get:
      description: Возвращает задачу по её ID
      parameters:
      - description: ID задачи
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
            type: object
        "404":
          description: Задача не найдена
          schema:
            type: string
      summary: Получить задачу по ID
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Обновляет существующую задачу
      parameters:
      - description: ID задачи
        in: path
        name: id
        required: true
        type: integer
      - description: Обновленные данные задачи
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.Task'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
            type: object
        "404":
          description: Задача не найдена
          schema:
            type: string
      summary: Обновить задачу
      tags:
      - tasks
swagger: "2.0"
